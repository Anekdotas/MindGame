openapi: 3.0.1
info:
  title: Anekdotas MindGame
  description: "Quiz application to advance and/or evaluate players' knowledge in different categories and topics."
  contact:
    email: borysej90@gmail.com
  version: alpha
tags:
  - name: categories
    description: Everything about categories
  - name: topics
    description: Everything about topics
  - name: questions
    description: Everything about questions
  - name: users
    description: Everything about users authentication
paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get all categories
      operationId: getCategories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /categories/{categoryId}/topics:
    get:
      tags:
        - topics
      summary: Get all available topics
      operationId: getTopics
      parameters:
        - name: categoryId
          description: Category ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
    post:
      tags:
        - topics
      summary: Create a new topic
      operationId: createTopic
      parameters:
        - name: categoryId
          description: Category ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - oAuth2: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Topic name
        401:
          $ref: '#/components/responses/Unauthorized'

  /categories/{categoryId}/topics/{topic}/questions:
    get:
      tags:
        - questions
      summary: Get random set of questions for selected topic
      operationId: getQuestionsByTopic
      parameters:
        - name: categoryId
          description: Category ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: topic
          in: path
          description: Topic name
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
    post:
      tags:
        - questions
      summary: Create a new question
      operationId: createQuestion
      parameters:
        - name: categoryId
          description: Category ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: topic
          in: path
          description: Topic name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      security:
        - oAuth2: []
      responses:
        200:
          $ref: '#/components/responses/ReturnedID'
        401:
          $ref: '#/components/responses/Unauthorized'
  /categories/{categoryId}/topics/{topic}/questions/{questionId}/media:
    post:
      tags:
        - questions
      summary: Upload media for an existing question
      operationId: uploadMedia
      parameters:
        - name: categoryId
          description: Category ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: topic
          in: path
          description: Topic name
          required: true
          schema:
            type: string
        - name: questionId
          in: path
          description: Question ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
      security:
        - oAuth2: []
      responses:
        200:
          description: Success
        401:
          $ref: '#/components/responses/Unauthorized'
  /auth/register:
    post:
      tags:
        - users
      summary: User registration
      operationId: userRegister
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                    repeatPassword:
                      type: string
                      description: Password confirmation
                      writeOnly: true
                  required:
                    - repeatPassword
      responses:
        201:
          $ref: '#/components/responses/ReturnedID'
  /auth/login:
    post:
      tags:
        - users
      summary: User authentication for token retrieval
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Access token


components:
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: /auth/login
          scopes: {}
  responses:
    ReturnedID:
      description: ID of the created item
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
    Unauthorized:
      description: User does not have permission to access the endpoint
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          description: Category name
      required:
        - name
    Topic:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          description: Topic name
        description:
          type: string
          description: Topic description
        author:
          type: string
          description: User who created the topic
          readOnly: true
        rating:
          type: number
          format: float
          readOnly: true
        imageUrl:
          type: string
          description: Link to topic image
          readOnly: true
        difficulty:
          type: integer
          minimum: 0
          maximum: 2
          default: 1
          description: 0 - Easy, 1 - Medium, 2 - Hard
      required:
        - name
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        text:
          type: string
          description: Actual text of the question
        mediaUrl:
          type: string
          format: url
          description: Path to media that is used in the question
          nullable: true
          readOnly: true
        correctAnswer:
          type: integer
          description: Points to correct answer in answers array
        answers:
          type: array
          maxLength: 4
          items:
            type: string
            description: Possible answer
      required:
        - text
        - correctAnswer
        - answers
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        username:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
